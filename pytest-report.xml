<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="1" skipped="0" tests="51" time="165.838" timestamp="2023-08-10T10:11:37.752072" hostname="SSB-PF2WBK2A"><testcase classname="tests.test_bounds" name="test_bounds" time="6.492" /><testcase classname="tests.test_buffdissexp" name="test_dissexp_by_cluster" time="0.614" /><testcase classname="tests.test_buffdissexp" name="test_buffdissexp_by_cluster" time="1.241" /><testcase classname="tests.test_buffdissexp" name="test_buffdissexp" time="0.190" /><testcase classname="tests.test_buffdissexp" name="test_buffdiss" time="0.174" /><testcase classname="tests.test_buffdissexp" name="test_dissexp" time="0.055" /><testcase classname="tests.test_buffdissexp" name="test_buffdissexp_index" time="0.123" /><testcase classname="tests.test_buffdissexp" name="test_dissexp_index" time="0.138" /><testcase classname="tests.test_close_network_holes" name="test_line_angle_0" time="0.463" /><testcase classname="tests.test_close_network_holes" name="test_line_angle_90" time="0.746" /><testcase classname="tests.test_close_network_holes" name="test_line_angle_45" time="0.507" /><testcase classname="tests.test_close_network_holes" name="test_close_network_holes" time="2.893" /><testcase classname="tests.test_directed_network" name="test_directed_network" time="2.657" /><testcase classname="tests.test_duplicates" name="test_random_get_intersections" time="20.161" /><testcase classname="tests.test_duplicates" name="test_drop_duplicate_geometries" time="0.110" /><testcase classname="tests.test_duplicates" name="test_get_intersections" time="1.802" /><testcase classname="tests.test_duplicates" name="test_update_geometries" time="0.395" /><testcase classname="tests.test_explore" name="test_explore" time="29.864" /><testcase classname="tests.test_geometry_types" name="test_all_geom_types" time="0.072"><failure message="AssertionError: 20&#10;assert 20 == 12&#10; +  where 20 = len(                                            geometry\n0                            POINT (0.00000 0.00000)\n1                          POINT (10.00000 10.00000)\n1                          POINT (11.00000 11.00000)\n2  LINEARRING (60.00000 60.00000, 60.00000 61.000...\n3  LINESTRING (20.00000 20.00000, 21.00000 21.00000)\n4  LINESTRING (30.00000 30.00000, 31.00000 31.00000)\n4  LINESTRING (32.00000 32.00000, 33.00000 33.00000)\n5  POLYGON ((40.25000 40.00000, 40.24988 39.99215...\n6  POLYGON ((51.25000 51.00000, 51.24988 50.99215...\n6  POLYGON ((50.25000 50.00000, 50.24988 49.99215...\n7                            POINT (0.00000 0.00000)\n7                          POINT (10.00000 10.00000)\n7                          POINT (11.00000 11.00000)\n7  POLYGON ((40.24951 39.98430, 40.24889 39.97647...\n7  POLYGON ((50.24889 49.97647, 50.24803 49.96867...\n7  POLYGON ((51.24889 50.97647, 51.24803 50.96867...\n7  LINESTRING (60.00000 60.00000, 60.00000 61.000...\n7  LINESTRING (20.00000 20.00000, 21.00000 21.00000)\n7  LINESTRING (30.00000 30.00000, 31.00000 31.00000)\n7  LINESTRING (32.00000 32.00000, 33.00000 33.00000))">def test_all_geom_types():
        gdf = create_all_geometry_types()
        assert sg.get_geom_type(gdf) == "mixed"
        assert not sg.is_single_geom_type(gdf)
        assert len(gdf) == 8, len(gdf)

        print(gdf)

        singlepart = sg.make_all_singlepart(gdf)
&gt;       assert len(singlepart) == 12, len(singlepart)
E       AssertionError: 20
E       assert 20 == 12
E        +  where 20 = len(                                            geometry\n0                            POINT (0.00000 0.00000)\n1                          POINT (10.00000 10.00000)\n1                          POINT (11.00000 11.00000)\n2  LINEARRING (60.00000 60.00000, 60.00000 61.000...\n3  LINESTRING (20.00000 20.00000, 21.00000 21.00000)\n4  LINESTRING (30.00000 30.00000, 31.00000 31.00000)\n4  LINESTRING (32.00000 32.00000, 33.00000 33.00000)\n5  POLYGON ((40.25000 40.00000, 40.24988 39.99215...\n6  POLYGON ((51.25000 51.00000, 51.24988 50.99215...\n6  POLYGON ((50.25000 50.00000, 50.24988 49.99215...\n7                            POINT (0.00000 0.00000)\n7                          POINT (10.00000 10.00000)\n7                          POINT (11.00000 11.00000)\n7  POLYGON ((40.24951 39.98430, 40.24889 39.97647...\n7  POLYGON ((50.24889 49.97647, 50.24803 49.96867...\n7  POLYGON ((51.24889 50.97647, 51.24803 50.96867...\n7  LINESTRING (60.00000 60.00000, 60.00000 61.000...\n7  LINESTRING (20.00000 20.00000, 21.00000 21.00000)\n7  LINESTRING (30.00000 30.00000, 31.00000 31.00000)\n7  LINESTRING (32.00000 32.00000, 33.00000 33.00000))

tests\test_geometry_types.py:26: AssertionError</failure></testcase><testcase classname="tests.test_geometry_types" name="test_geom_types" time="0.022" /><testcase classname="tests.test_geopandas_utils" name="test_get_common_crs" time="0.015" /><testcase classname="tests.test_geopandas_utils" name="test_drop_inactive" time="0.005" /><testcase classname="tests.test_geopandas_utils" name="test_rename_geometry_if" time="0.010" /><testcase classname="tests.test_geopandas_utils" name="test_random" time="0.020" /><testcase classname="tests.test_geopandas_utils" name="test_points_in_bounds" time="0.187" /><testcase classname="tests.test_geopandas_utils" name="test_area" time="0.065" /><testcase classname="tests.test_geopandas_utils" name="test_clean_clip" time="0.059" /><testcase classname="tests.test_geopandas_utils" name="test_clean" time="0.085" /><testcase classname="tests.test_geopandas_utils" name="test_sort" time="0.085" /><testcase classname="tests.test_get_components" name="test_get_components" time="0.743" /><testcase classname="tests.test_neighbors" name="test_k_neighbors" time="2.857" /><testcase classname="tests.test_neighbors" name="test_get_neighbor_indices" time="0.199" /><testcase classname="tests.test_network_analysis" name="test_network_analysis" time="37.486" /><testcase classname="tests.test_network_functions" name="test_network_functions" time="1.545" /><testcase classname="tests.test_node_ids" name="test_node_ids" time="0.721" /><testcase classname="tests.test_overlay" name="test_overlay" time="2.377" /><testcase classname="tests.test_overlay" name="test_overlay_random" time="21.608" /><testcase classname="tests.test_point_operations" name="test_snap" time="0.094" /><testcase classname="tests.test_point_operations" name="test_snap_geoseries" time="0.062" /><testcase classname="tests.test_polygon_operations" name="test_close_holes" time="0.186" /><testcase classname="tests.test_polygon_operations" name="test_get_polygon_clusters" time="0.645" /><testcase classname="tests.test_polygon_operations" name="test_eliminate" time="0.968" /><testcase classname="tests.test_qtm" name="test_qtm" time="5.192" /><testcase classname="tests.test_read_parquet_url" name="test_read_parquet_url" time="0.520" /><testcase classname="tests.test_service_area" name="test_service_area" time="2.591" /><testcase classname="tests.test_snap" name="test_snap" time="0.049" /><testcase classname="tests.test_snap" name="test_snap_series" time="0.056" /><testcase classname="tests.test_split_lines" name="test_split_lines" time="2.522" /><testcase classname="tests.test_thematicmap" name="test_thematicmap" time="9.379" /><testcase classname="tests.test_to_gdf" name="test_to_gdf" time="0.398" /><testcase classname="tests.test_to_lines" name="test_to_lines" time="0.840" /></testsuite></testsuites>
