name: Tests

on:
  push:
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  ci-tests:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11"]
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
          lfs: true

      - name: Upgrade pip
        if: matrix.os != 'macos-latest'
        run: |
          pip install -c ${{ github.workspace }}/.github/workflows/constraints.txt pip
          pip --version

      - name: Upgrade pip on MacOS
        if: matrix.os == 'macos-latest'
        run: |
          pip install -c ${{ github.workspace }}/.github/workflows/constraints.txt pip
          pip --version

      - name: Install Poetry
        run: |
          pipx install --pip-args= "-c ${{ github.workspace }}/.github/workflows/constraints.txt" poetry
          poetry --version

      - name: Set up Python
        uses: actions/setup-python@v5.1.0
        with:
          python-version: ${{ matrix.python-version }}
          cache: "poetry"

      - name: Install dependencies
        run: |
          poetry install --no-root

      - name: Run pytest with coverage
        if: ${{ (matrix.os != 'ubuntu-latest') }}
        run: |
          poetry run pytest -k "not raster and not cube" --verbose --durations=5

      - name: Run raster pytest with coverage
        if: ${{ (matrix.os == 'ubuntu-latest') }}
        run: |
          poetry run pytest --verbose --durations=5 --cov --cov-report=term --cov-report=xml --junitxml=pytest-report.xml

      - name: SonarCloud Scan
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11' }}
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Build api-documentation
        if: ${{ (matrix.os == 'ubuntu-latest') &&  (matrix.python-version == '3.11') }}
        run: |
          poetry run sphinx-build -W docs docs/_build
