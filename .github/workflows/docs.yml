# Simple workflow for deploying static content to GitHub Pages
name: Docs

on:
  # Runs on pushes targeting the default branch
  push:
    branches:
      - main
      - master

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Install Poetry
        run: |
          pipx install --pip-args=--constraint=.github/workflows/constraints.txt poetry
          poetry --version
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: "poetry"
      - name: Install dependencies
        run: |
          poetry env use "3.10"     # Needed to cache dependencies
          poetry install --no-root
      - name: Build doc with Sphinx
        run: |
          poetry run sphinx-build -W docs docs/_build
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: "docs/_build"
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
