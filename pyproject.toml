[tool.poetry]
name = "ssb-sgis"
version = "1.0.1"
description = "GIS functions used at Statistics Norway."
authors = ["Morten Letnes <morten.letnes@ssb.no>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/statisticsnorway/ssb-sgis"
repository = "https://github.com/statisticsnorway/ssb-sgis"
documentation = "https://statisticsnorway.github.io/ssb-sgis"
packages = [{ include = "sgis", from = "src" }]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Topic :: Scientific/Engineering :: GIS",
]

[tool.poetry.urls]
Changelog = "https://github.com/statisticsnorway/ssb-sgis/releases"

[tool.poetry.dependencies]
python = ">=3.10,<4"
branca = ">=0.6.0"
folium = ">=0.14.0"
geopandas = ">=0.14.0"
igraph = ">=0.11.2"
mapclassify = ">=2.5.0"
matplotlib = ">=3.7.0"
networkx = ">=3.0"
numpy = ">=1.24.2"
pandas = ">=2.0.3"
pyarrow = ">=11.0.0"
requests = ">=2.28.2"
scikit-learn = ">=1.2.1"
shapely = ">=2.0.1"
xyzservices = ">=2023.2.0"
jenkspy = ">=0.3.2"
ipython = ">=8.13.2"
rtree = ">=1.0.1"
geocoder = ">=1.38.1"
rasterio = ">=1.3.8"
pip = ">=23.2.1"
dask = ">=2024.1.1"

[tool.poetry.group.dev.dependencies]
black = {extras = ["jupyter"], version = ">=23.1.0"}
coverage = {extras = ["toml"], version = ">=7.2.1"}
darglint = ">=1.8.1"
deptry = ">=0.8.0"
numba = "^0.57.1"
xarray = "2023.8.0"
rioxarray = ">=0.14.1"
flake8 = ">=6.0.0"
flake8-bandit = ">=4.1.1"
flake8-bugbear = ">=23.2.13"
flake8-docstrings = ">=1.7.0"
flake8-rst-docstrings = ">=0.3.0"
furo = ">=2023.3.27"
isort = ">=5.12.0"
jupyterlab = ">=3.6.1"
jupytext = ">=1.14.5"
mypy = ">=1.0.1"
myst-parser = {version = ">=0.19.1"}
pep8-naming = ">=0.13.3"
pre-commit = ">=3.1.1"
pre-commit-hooks = ">=4.4.0"
pyogrio = ">=0.5.1"
pytest = ">=7.2.1"
pytest-cov = ">=4.0.0"
pytest-mock = ">=3.10.0"
pyupgrade = ">=3.3.1"
sphinx = ">=6.1.3"
sphinx-autobuild = ">=2021.3.14"
sphinx-autodoc-typehints = ">=1.22"
torch = ">=2.2.2"
torchgeo = ">=0.5.2"
xdoctest = {extras = ["colors"], version = ">=1.1.1"}
pygments = ">=2.10.0"
ruff = ">=0.0.284
sphinx-click = ">=3.0.2"
typeguard = ">=2.13.3"



[tool.coverage.paths]
source = ["src", "*/site-packages"]
tests = ["tests", "*/tests"]

[tool.coverage.run]
branch = true
source = ["sgis", "tests"]
relative_files = true

[tool.coverage.report]
show_missing = true
fail_under = 50

[tool.mypy]
strict = true
warn_unreachable = true
pretty = true
show_column_numbers = true
show_error_context = true

[tool.ruff]
force-exclude = true  # Apply excludes to pre-commit
show-fixes = true
src = ["src", "tests"]
target-version = "py310"  # Minimum Python version supported
include = ["*.py", "*.pyi", "**/pyproject.toml", "*.ipynb"]
extend-exclude = [
    "__pycache__",
    "old",
    ".ipynb_checkpoints",
    "noxfile.py",
    "docs/conf.py",
]

# Ruff rules may be customized as desired: https://docs.astral.sh/ruff/rules/
[tool.ruff.lint]
select = [
    "A",    # prevent using keywords that clobber python builtins
    "ANN",  # check type annotations
    "B",    # bugbear: security warnings
    "D",    # documentation
    "E",    # pycodestyle
    "F",    # pyflakes
    "ISC",  # implicit string concatenation
    "I",    # sort imports
    "UP",   # alert you when better syntax is available in your python version
    "RUF",  # the ruff developer's own rules
]
ignore = [
    "ANN101", # Supress missing-type-self.
    "ANN102", # Supress missing-type-cls.
    "ANN202", # Don't requiere return type annotation for private functions.
    "ANN401", # Allow type annotation with type Any.
    "D100",   # Supress undocumented-public-module. Only doc of public api required.
    "E402",   # Supress module-import-not-at-top-of-file, needed in jupyter notebooks.
    "E501",   # Supress line-too-long warnings: trust black's judgement on this one.
]

[tool.ruff.lint.isort]
force-single-line = true

[tool.ruff.lint.mccabe]
max-complexity = 15

[tool.ruff.lint.pydocstyle]
convention = "google"  # You can also use "numpy".

[tool.ruff.lint.pep8-naming]
classmethod-decorators = ["classmethod", "validator", "root_validator", "pydantic.validator"]

[tool.ruff.lint.per-file-ignores]
"*/__init__.py" = ["F401"]
"**/tests/*" = [
    "ANN001",  # type annotations don't add value for test functions
    "ANN002",  # type annotations don't add value for test functions
    "ANN003",  # type annotations don't add value for test functions
    "ANN201",  # type annotations don't add value for test functions
    "ANN204",  # type annotations don't add value for test functions
    "ANN205",  # type annotations don't add value for test functions
    "ANN206",  # type annotations don't add value for test functions
    "D100",    # docstrings are overkill for test functions
    "D101",
    "D102",
    "D103",
    "S101",    # asserts are encouraged in pytest
]

[tool.jupytext]
formats = "ipynb,auto:percent"
notebook_metadata_filter = "jupytext.text_representation,-jupytext.text_representation.jupytext_version,-widgets,-varInspector,-kernelspec"
cell_metadata_filter = "-all"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
